// This file was auto-generated by prisma-generator-typescript-interfaces

export type AccountType = "BUSINESS" | "CONTRACTOR";

export const AccountType = {
  BUSINESS: "BUSINESS",
  CONTRACTOR: "CONTRACTOR"
} satisfies Record<string, AccountType>;

export type AdminType = "SUPER" | "ADMIN";

export const AdminType = {
  SUPER: "SUPER",
  ADMIN: "ADMIN"
} satisfies Record<string, AdminType>;

export type ContractorKind = "ENTITY" | "INDIVIDUAL";

export const ContractorKind = {
  ENTITY: "ENTITY",
  INDIVIDUAL: "INDIVIDUAL"
} satisfies Record<string, ContractorKind>;

export type CurrencyCode = "USD" | "EUR" | "JPY" | "GBP" | "AUD" | "AZN" | "AMD" | "BYN" | "BGN" | "BRL" | "HUF" | "VND" | "HKD" | "GEL" | "DKK" | "AED" | "EGP" | "INR" | "IDR" | "KZT" | "CAD" | "QAR" | "KGS" | "CNY" | "MDL" | "NZD" | "NOK" | "PLN" | "RON" | "XDR" | "SGD" | "TJS" | "THB" | "TRY" | "TMT" | "UZS" | "UAH" | "CZK" | "SEK" | "CHF" | "RSD" | "ZAR" | "KRW" | "RUB";

export const CurrencyCode = {
  USD: "USD",
  EUR: "EUR",
  JPY: "JPY",
  GBP: "GBP",
  AUD: "AUD",
  AZN: "AZN",
  AMD: "AMD",
  BYN: "BYN",
  BGN: "BGN",
  BRL: "BRL",
  HUF: "HUF",
  VND: "VND",
  HKD: "HKD",
  GEL: "GEL",
  DKK: "DKK",
  AED: "AED",
  EGP: "EGP",
  INR: "INR",
  IDR: "IDR",
  KZT: "KZT",
  CAD: "CAD",
  QAR: "QAR",
  KGS: "KGS",
  CNY: "CNY",
  MDL: "MDL",
  NZD: "NZD",
  NOK: "NOK",
  PLN: "PLN",
  RON: "RON",
  XDR: "XDR",
  SGD: "SGD",
  TJS: "TJS",
  THB: "THB",
  TRY: "TRY",
  TMT: "TMT",
  UZS: "UZS",
  UAH: "UAH",
  CZK: "CZK",
  SEK: "SEK",
  CHF: "CHF",
  RSD: "RSD",
  ZAR: "ZAR",
  KRW: "KRW",
  RUB: "RUB"
} satisfies Record<string, CurrencyCode>;

export type TransactionFeesType = "FEES_INCLUDED" | "NO_FEES_INCLUDED";

export const TransactionFeesType = {
  FEES_INCLUDED: "FEES_INCLUDED",
  NO_FEES_INCLUDED: "NO_FEES_INCLUDED"
} satisfies Record<string, TransactionFeesType>;

export type LegalStatus = "INDIVIDUAL" | "INDIVIDUAL_ENTREPRENEUR" | "SOLE_TRADER";

export const LegalStatus = {
  INDIVIDUAL: "INDIVIDUAL",
  INDIVIDUAL_ENTREPRENEUR: "INDIVIDUAL_ENTREPRENEUR",
  SOLE_TRADER: "SOLE_TRADER"
} satisfies Record<string, LegalStatus>;

export type OrganizationSize = "SMALL" | "MEDIUM" | "LARGE";

export const OrganizationSize = {
  SMALL: "SMALL",
  MEDIUM: "MEDIUM",
  LARGE: "LARGE"
} satisfies Record<string, OrganizationSize>;

export type PaymentMethodType = "BANK_ACCOUNT" | "CREDIT_CARD";

export const PaymentMethodType = {
  BANK_ACCOUNT: "BANK_ACCOUNT",
  CREDIT_CARD: "CREDIT_CARD"
} satisfies Record<string, PaymentMethodType>;

export type ResourceAccess = "PUBLIC" | "PRIVATE";

export const ResourceAccess = {
  PUBLIC: "PUBLIC",
  PRIVATE: "PRIVATE"
} satisfies Record<string, ResourceAccess>;

export type TransactionActionType = "INCOME" | "OUTCOME";

export const TransactionActionType = {
  INCOME: "INCOME",
  OUTCOME: "OUTCOME"
} satisfies Record<string, TransactionActionType>;

export type TransactionStatus = "DRAFT" | "WAITING" | "WAITING_RECIPIENT_APPROVAL" | "PENDING" | "COMPLETED" | "DENIED" | "UNCOLLECTIBLE";

export const TransactionStatus = {
  DRAFT: "DRAFT",
  WAITING: "WAITING",
  WAITING_RECIPIENT_APPROVAL: "WAITING_RECIPIENT_APPROVAL",
  PENDING: "PENDING",
  COMPLETED: "COMPLETED",
  DENIED: "DENIED",
  UNCOLLECTIBLE: "UNCOLLECTIBLE"
} satisfies Record<string, TransactionStatus>;

export type TransactionType = "CREDIT_CARD" | "BANK_TRANSFER" | "CURRENCY_EXCHANGE";

export const TransactionType = {
  CREDIT_CARD: "CREDIT_CARD",
  BANK_TRANSFER: "BANK_TRANSFER",
  CURRENCY_EXCHANGE: "CURRENCY_EXCHANGE"
} satisfies Record<string, TransactionType>;

export type IAccessRefreshTokenModel = {
  id: string;
  identityId: string;
  accessToken: string;
  refreshToken: string;
  createdAt?: Date | null;
  updatedAt?: Date | null;
  deletedAt?: Date | null;
};

export type IAddressDetailsModel = {
  id: string;
  postalCode: string;
  country: string;
  city?: string | null;
  state?: string | null;
  street?: string | null;
  consumerId: string;
  consumer?: IConsumerModel;
  createdAt?: Date | null;
  updatedAt?: Date | null;
  deletedAt?: Date | null;
};

export type IAdminModel = {
  id: string;
  type: AdminType;
  email: string;
  password: string;
  salt: string;
  createdAt?: Date | null;
  updatedAt?: Date | null;
  deletedAt?: Date | null;
};

export type IBillingDetailsModel = {
  id: string;
  email?: string | null;
  name?: string | null;
  phone?: string | null;
  paymentMethod?: IPaymentMethodModel | null;
  createdAt?: Date | null;
  updatedAt?: Date | null;
  deletedAt?: Date | null;
};

export type IConsumerModel = {
  id: string;
  email: string;
  verified: boolean;
  legalVerified: boolean;
  password?: string | null;
  salt?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  accountType?: AccountType | null;
  contractorKind?: ContractorKind | null;
  howDidHearAboutUs?: string | null;
  stripeCustomerId?: string | null;
  addressDetails?: IAddressDetailsModel | null;
  personalDetails?: IPersonalDetailsModel | null;
  organizationDetails?: IOrganizationDetailsModel | null;
  googleProfileDetails?: IGoogleProfileDetailsModel | null;
  asPayerPaymentRequests?: IPaymentRequestModel[];
  asRequesterPaymentRequests?: IPaymentRequestModel[];
  resources?: IConsumerResourceModel[];
  contacts?: IContactModel[];
  paymentMethods?: IPaymentMethodModel[];
  attachments?: IPaymentRequestAttachmentModel[];
  passwordResets?: IResetPasswordModel[];
  transactions?: ITransactionModel[];
  createdAt?: Date | null;
  updatedAt?: Date | null;
  deletedAt?: Date | null;
};

export type IConsumerResourceModel = {
  id: string;
  consumerId: string;
  consumer?: IConsumerModel;
  resourceId: string;
  resource?: IResourceModel;
  createdAt?: Date | null;
  updatedAt?: Date | null;
  deletedAt?: Date | null;
};

export type IContactModel = {
  id: string;
  email: string;
  name?: string | null;
  address: JsonValue;
  consumerId: string;
  consumer?: IConsumerModel;
  createdAt?: Date | null;
  updatedAt?: Date | null;
  deletedAt?: Date | null;
};

export type IExchangeRateModel = {
  id: string;
  fromCurrency: CurrencyCode;
  toCurrency: CurrencyCode;
  rate: Decimal;
  createdAt?: Date | null;
  updatedAt?: Date | null;
  deletedAt?: Date | null;
};

export type IGoogleProfileDetailsModel = {
  id: string;
  email: string;
  emailVerified: boolean;
  name?: string | null;
  givenName?: string | null;
  familyName?: string | null;
  picture?: string | null;
  organization?: string | null;
  metadata?: JsonValue | null;
  consumerId: string;
  consumer?: IConsumerModel;
  createdAt?: Date | null;
  updatedAt?: Date | null;
  deletedAt?: Date | null;
};

export type IOrganizationDetailsModel = {
  id: string;
  name: string;
  consumerRole: string;
  size: OrganizationSize;
  consumerId: string;
  consumer?: IConsumerModel;
  createdAt?: Date | null;
  updatedAt?: Date | null;
  deletedAt?: Date | null;
};

export type IPaymentMethodModel = {
  id: string;
  type: PaymentMethodType;
  defaultSelected: boolean;
  brand: string;
  last4: string;
  serviceFee: number;
  expMonth?: string | null;
  expYear?: string | null;
  billingDetailsId: string;
  billingDetails?: IBillingDetailsModel;
  consumerId: string;
  consumer?: IConsumerModel;
  createdAt?: Date | null;
  updatedAt?: Date | null;
  deletedAt?: Date | null;
};

export type IPaymentRequestModel = {
  id: string;
  currencyCode: CurrencyCode;
  status: TransactionStatus;
  type: TransactionType;
  amount: Decimal;
  description?: string | null;
  dueDate?: Date | null;
  expectationDate?: Date | null;
  sentDate?: Date | null;
  payerId: string;
  payer?: IConsumerModel;
  requesterId: string;
  requester?: IConsumerModel;
  attachments?: IPaymentRequestAttachmentModel[];
  transactions?: ITransactionModel[];
  createdBy: string;
  createdAt?: Date | null;
  updatedBy: string;
  updatedAt?: Date | null;
  deletedBy?: string | null;
  deletedAt?: Date | null;
};

export type IPaymentRequestAttachmentModel = {
  id: string;
  paymentRequestId: string;
  paymentRequest?: IPaymentRequestModel;
  requesterId: string;
  requester?: IConsumerModel;
  resourceId: string;
  resource?: IResourceModel;
  createdAt?: Date | null;
  updatedAt?: Date | null;
  deletedAt?: Date | null;
};

export type IPersonalDetailsModel = {
  id: string;
  legalStatus?: LegalStatus | null;
  citizenOf: string;
  dateOfBirth: string;
  passportOrIdNumber: string;
  countryOfTaxResidence?: string | null;
  taxId?: string | null;
  phoneNumber?: string | null;
  consumerId: string;
  consumer?: IConsumerModel;
  createdAt?: Date | null;
  updatedAt?: Date | null;
  deletedAt?: Date | null;
};

export type IResetPasswordModel = {
  id: string;
  token: string;
  expiredAt: Date;
  consumerId: string;
  consumer?: IConsumerModel;
  createdAt?: Date | null;
  updatedAt?: Date | null;
  deletedAt?: Date | null;
};

export type IResourceModel = {
  id: string;
  access: string;
  originalName: string;
  mimetype: string;
  size: number;
  bucket: string;
  key: string;
  downloadUrl: string;
  createdAt?: Date | null;
  updatedAt?: Date | null;
  deletedAt?: Date | null;
  consumerResources?: IConsumerResourceModel[];
  attachments?: IPaymentRequestAttachmentModel[];
};

export type ITransactionModel = {
  id: string;
  code: string;
  type: TransactionType;
  currencyCode: CurrencyCode;
  actionType: TransactionActionType;
  status: TransactionStatus;
  feesType?: TransactionFeesType | null;
  feesAmount?: Decimal | null;
  originAmount: Decimal;
  stripeId?: string | null;
  stripeFeeInPercents?: number | null;
  consumerId: string;
  consumer?: IConsumerModel;
  paymentRequestId?: string | null;
  paymentRequest?: IPaymentRequestModel | null;
  createdBy: string;
  createdAt?: Date | null;
  updatedBy: string;
  updatedAt?: Date | null;
  deletedBy?: string | null;
  deletedAt?: Date | null;
};

type JsonValue = string | number | boolean | { [key in string]?: JsonValue } | Array<JsonValue> | null;

type Decimal = { valueOf(): string };
